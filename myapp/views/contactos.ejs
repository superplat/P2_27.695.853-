<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Contactos</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <meta name="csrf-token" content="<%= csrfToken %>">
</head>
<body class="bg-gray-100">
  <div class="container mx-auto p-4">
    <h1 class="text-2xl font-bold mb-4">Contactos</h1>
    
    <!-- Mostrar el botón de logout si el usuario está autenticado -->
    <div class="mb-6">
      <% if (user && user.username === 'admin') { %>
        <!-- Solo visible para admin -->
        <a href="/logout" class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600">Cerrar sesión</a>
        <a href="/register" class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 ml-4">Registrar</a>
      <% } else if (user) { %>
        <!-- Solo visible para usuarios autenticados -->
        <a href="/logout" class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600">Cerrar sesión</a>
      <% } else { %>
        <!-- Visible para usuarios no autenticados -->
        <a href="/login" class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">Iniciar sesión</a>
      <% } %>
    </div>
    
    <ul class="space-y-4">
    <h1 class="text-3xl font-bold mb-6">Lista de Contactos</h1>

    <input
      type="text"
      id="search"
      placeholder="Buscar por nombre o email..."
      class="w-full p-2 border border-gray-300 rounded shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 mb-6"
    />

    <% if (contactos.length === 0) { %>
      <p class="text-center text-gray-500">No hay contactos disponibles.</p>
    <% } else { %>
      <table class="min-w-full bg-white border rounded shadow-md">
        <thead>
          <tr class="bg-gray-200 text-left">
            <th class="py-2 px-4">Nombre</th>
            <th class="py-2 px-4">Correo</th>
            <th class="py-2 px-4">Comentario</th>
            <th class="py-2 px-4">IP</th>
            <th class="py-2 px-4">País</th>
            <th class="py-2 px-4">Fecha</th>
            <th class="py-2 px-4">Acciones</th>
          </tr>
        </thead>
        <tbody>
          <% contactos.forEach(contacto => { %>
            <tr class="border-b hover:bg-gray-100">
              <td class="py-2 px-4"><%= contacto.nombre %></td>
              <td class="py-2 px-4"><%= contacto.email %></td>
              <td class="py-2 px-4"><%= contacto.comentario %></td>
              <td class="py-2 px-4"><%= contacto.ip %></td>
              <td class="py-2 px-4"><%= contacto.country %></td>
              <td class="py-2 px-4"><%= new Date(contacto.fecha).toLocaleString() %></td>
              <td class="py-2 px-4">
             <% if (user && user.username === 'admin') { %>
        <button class="delete-btn text-red-500 hover:underline" data-contacto-id="<%= contacto.id %>">
          Eliminar
        </button>
      <% } %>
    </td>
  </tr>
<% }) %>
        </tbody>
      </table>
    <% } %>
  </div>

  <script>
    const csrfToken = '<%= csrfToken %>';

    // Función para enviar una solicitud POST con CSRF para eliminar contacto
    async function eliminarContacto(contactoId) {
      const confirmDelete = confirm('¿Estás seguro de que deseas eliminar este contacto?');
      if (!confirmDelete) return;

      try {
        const response = await fetch(`/contactos/delete/${contactoId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': csrfToken
          }
        });

        if (!response.ok) {
          throw new Error('Error al eliminar el contacto');
        }

        alert('Contacto eliminado correctamente');
        location.reload();  // Recargar la página para mostrar los cambios
      } catch (error) {
        console.error('Error:', error);
        alert('No se pudo eliminar el contacto');
      }
    }

    // Asignar evento a los botones de eliminación
    document.querySelectorAll('.delete-btn').forEach(button => {
      button.addEventListener('click', function () {
        console.log('Botón de eliminar presionado');
        const contactoId = this.dataset.contactoId;
        eliminarContacto(contactoId);
      });
    });

    // Filtro de búsqueda optimizado con debounce
    let timeout;
    document.getElementById('search').addEventListener('input', function () {
      clearTimeout(timeout);
      timeout = setTimeout(function () {
        const searchValue = document.getElementById('search').value.toLowerCase();
        document.querySelectorAll('tbody tr').forEach(row => {
          const textContent = row.textContent.toLowerCase();
          row.style.display = textContent.includes(searchValue) ? '' : 'none';
        });
      }, 300); // 300 ms de retardo para evitar múltiples ejecuciones
    });
  </script>
</body>
</html>
